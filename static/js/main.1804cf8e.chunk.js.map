{"version":3,"sources":["sections/SnowStorm.js","sections/NavigationbarAbout.js","sections/NavigationbarSkill.js","sections/Nav.js","components/Fullpage.js","components/DownIcon.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","sections/BackToTop.js","App.js","serviceWorker.js","index.js"],"names":["SnowStorm","Component","NavigationbarAbout","react_default","a","createElement","modules","activeClass","to","spy","smooth","offset","duration","delay","name","className","NavigationbarSkill","Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleScroll","bind","assertThisInitialized","setState","scroll","window","scrollY","el","document","querySelector","top","offsetTop","height","offsetHeight","addEventListener","body","style","paddingTop","concat","sections_NavigationbarAbout","sections_NavigationbarSkill","React","Fullpage","color","randomColor","colory","i","Math","floor","random","children","background","onClick","DownIcon","display","flexDirection","alignContent","justifyContent","marginBottom","transform","maxWidth","src","icon","maxHeight","TitleSection","src_components_Fullpage","data","title","subtitle","keys","links","map","key","react_social_icons","url","components_DownIcon","icons","down","AboutSection","sections","items","p","content","SkillCard","skill","image","href","ca","SkillSection","eachSkill","src_components_SkillCard","BackToTop","react_scroll_up_button","App","sections_Nav","src_sections_TitleSection","src_sections_AboutSection","src_sections_SkillSection","sections_BackToTop","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1804cf8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nclass snowStorm extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SnowStorm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SnowStorm;\r\n","/*scroll to about(navbar)*/\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass NavigationbarAbout extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Title\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={5}\r\n          duration={1000}\r\n          delay={10}\r\n        >\r\n          About\r\n        </Link>\r\n        <Element name=\"Title\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NavigationbarAbout;\r\n","/*scroll to skill (navbar)*/\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass NavigationbarSkill extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Skill\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={5}\r\n          duration={1000}\r\n          delay={10}\r\n        >\r\n          Skills\r\n        </Link>\r\n        <Element name=\"Skill\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NavigationbarSkill;\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavigationbarAbout from \"./NavigationbarAbout\";\r\nimport NavigationbarSkill from \"./NavigationbarSkill\";\r\nimport \"./nav.css\";\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    /*bind this to handleScroll*/\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n  /*now*/\r\n  handleScroll() {\r\n    this.setState({ scroll: window.scrollY });\r\n  }\r\n  /*later*/\r\n  componentDidMount() {\r\n    const el = document.querySelector(\"nav\");\r\n    this.setState({ top: el.offsetTop, height: el.offsetHeight });\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n  /*if and else*/\r\n  componentDidUpdate() {\r\n    this.state.scroll > this.state.top\r\n      ? (document.body.style.paddingTop = `${this.state.height}px`)\r\n      : (document.body.style.paddingTop = 0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className={this.state.scroll > this.state.top ? \"fixed-nav\" : \"\"}>\r\n        <ul>\r\n          <li>\r\n            {/*<ChangeColor /> (Its for next version)I dont have enugh time for this item because this item need enough knowledge for props,state and lifecycle method*/}\r\n          </li>\r\n          <li>\r\n            <NavigationbarAbout />\r\n          </li>\r\n          <li>\r\n            <NavigationbarSkill />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","/*FullPage Component*/\r\nimport React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n\r\n\r\n  state = {\r\n    color: \"\"\r\n  };\r\n/*generate random color*/\r\n  randomColor = () => {\r\n    let letters = \"0123456789ABCDEF\";\r\n    let colory = \"#\";\r\n    for (let i = 0; i < 6; i++) {\r\n      colory += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    this.setState({ color: colory });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div className={`fullpage ${this.props.className || ``}`}\r\n      /*use random color*/\r\n      style={{ background: this.state.color }}\r\n      onClick={this.randomColor}\r\n      \r\n      \r\n      >{children}</div>\r\n    );\r\n  }\r\n}\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nconst DownIcon = props => {\r\n  return (\r\n    <div\r\n    onClick={props.onClick}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\",\r\n        marginBottom: \"-34px\",\r\n        transform: \"translateY(-80px)\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"30px\"\r\n        }}\r\n      >\r\n        <img src={props.icon} \r\n        style={{\r\n          maxWidth: \"100%\",\r\n          maxHeight: '100%'\r\n        }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./TitleSection.css\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitleSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"nav first\">\r\n          <div>\r\n            <h1>{data.title}</h1>\r\n            <div>\r\n              <h2>{data.subtitle}</h2>\r\n            </div>\r\n            <div className=\"icons-wrapper\">\r\n              {Object.keys(data.links).map(key => {\r\n                return <SocialIcon className=\"icon\" url={data.links[key]} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Fullpage>\r\n\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Title\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={5}\r\n          duration={500}\r\n          delay={10}\r\n        >\r\n          <DownIcon icon={data.icons[0].down} />\r\n        </Link>\r\n        <Element name=\"Title\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TitleSection;\r\n","/*About Component*/\r\nimport React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./AboutSection.css\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <h3>{data.sections[0].title}</h3>\r\n          <div>{/*just for iterate from data.json*/}\r\n            {data.sections[0].items.map(p => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        {/*scroll to skill unit*/}\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Skill\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={5}\r\n          duration={500}\r\n          delay={10}\r\n        >\r\n          <DownIcon icon={data.icons[0].down} />\r\n        </Link>\r\n        <Element name=\"Skill\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./SkillCard.css\";\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} />\r\n        </div>\r\n\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <a href={skill.content.ca}>certificate</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from \"../data.json\";\r\nimport \"./SkillSection.css\";\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div />\r\n        <Fullpage className=\"third\">\r\n          <h3>{data.sections[1].title}</h3>\r\n          <div className=\"cards-wrapper\">\r\n          {/*iterate */}\r\n            {data.sections[1].items.map(eachSkill => {\r\n              return <SkillCard skill={eachSkill} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillSection;\r\n","/*scroll to top component(use vertical and up boutton)*/\r\nimport React, { Component } from \"react\";\r\n\r\n\r\nimport {VerticleButton as ScrollUpButton}from \"react-scroll-up-button\"\r\n\r\nclass BackToTop extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n        <ScrollUpButton />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BackToTop;\r\n","import React, { Component } from \"react\";\n\nimport SnowStorm from \"./sections/SnowStorm\";\n\nimport Nav from \"./sections/Nav\";\n\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\n\nimport BackToTop from \"./sections/BackToTop\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <SnowStorm />\n        <TitleSection />\n        <AboutSection />\n        <SkillSection />\n        <BackToTop />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}